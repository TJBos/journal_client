[{"/Users/toonbosmans/development/GA-projects/project4/journal_client/src/reportWebVitals.js":"1","/Users/toonbosmans/development/GA-projects/project4/journal_client/src/App.js":"2","/Users/toonbosmans/development/GA-projects/project4/journal_client/src/components/Display.js":"3","/Users/toonbosmans/development/GA-projects/project4/journal_client/src/components/Form.js":"4","/Users/toonbosmans/development/GA-projects/project4/journal_client/src/components/Show.js":"5","/Users/toonbosmans/development/GA-projects/project4/journal_client/src/index.js":"6","/Users/toonbosmans/development/GA-projects/project4/journal_client/src/components/Navi.js":"7","/Users/toonbosmans/development/GA-projects/project4/journal_client/src/components/auth/Login.js":"8","/Users/toonbosmans/development/GA-projects/project4/journal_client/src/components/auth/Signup.js":"9","/Users/toonbosmans/development/GA-projects/project4/journal_client/src/components/NaviLoggedIn.js":"10","/Users/toonbosmans/development/GA-projects/project4/journal_client/src/AppB.js":"11"},{"size":362,"mtime":1607370176714,"results":"12","hashOfConfig":"13"},{"size":5157,"mtime":1607703209698,"results":"14","hashOfConfig":"13"},{"size":1026,"mtime":1607701792756,"results":"15","hashOfConfig":"13"},{"size":1395,"mtime":1607656355507,"results":"16","hashOfConfig":"13"},{"size":835,"mtime":1607703024849,"results":"17","hashOfConfig":"13"},{"size":614,"mtime":1607648980923,"results":"18","hashOfConfig":"13"},{"size":745,"mtime":1607633383844,"results":"19","hashOfConfig":"13"},{"size":2172,"mtime":1607700013413,"results":"20","hashOfConfig":"13"},{"size":2104,"mtime":1607630796606,"results":"21","hashOfConfig":"13"},{"size":1131,"mtime":1607630137054,"results":"22","hashOfConfig":"13"},{"size":3406,"mtime":1607648804984,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"tda38e",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/toonbosmans/development/GA-projects/project4/journal_client/src/reportWebVitals.js",[],["49","50"],"/Users/toonbosmans/development/GA-projects/project4/journal_client/src/App.js",["51","52"],"/Users/toonbosmans/development/GA-projects/project4/journal_client/src/components/Display.js",[],"/Users/toonbosmans/development/GA-projects/project4/journal_client/src/components/Form.js",[],"/Users/toonbosmans/development/GA-projects/project4/journal_client/src/components/Show.js",[],"/Users/toonbosmans/development/GA-projects/project4/journal_client/src/index.js",["53"],"/Users/toonbosmans/development/GA-projects/project4/journal_client/src/components/Navi.js",["54","55"],"/Users/toonbosmans/development/GA-projects/project4/journal_client/src/components/auth/Login.js",[],"/Users/toonbosmans/development/GA-projects/project4/journal_client/src/components/auth/Signup.js",["56"],"import React from \"react\";\nimport { GlobalCtx } from \"../../App\";\n//import './Login.css'\n\nconst Signup = ({ history }) => {\n  const { gState, setgState } = React.useContext(GlobalCtx);\n  const { url } = gState;\n\n  const blank = {\n    username: \"\",\n    password: \"\",\n  };\n  const [form, setForm] = React.useState(blank);\n\n  const handleChange = (event) => {\n    setForm({ ...form, [event.target.name]: event.target.value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const { username, password } = form;\n    fetch(`${url}/users`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setForm(blank);\n        console.log(\"signed up\");\n        history.push(\"/login\");\n      });\n  };\n\n  return (\n    <div className=\"form-container\">\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <h1>Signup</h1>\n        <div className=\"form-group form-inline\">\n          <label>\n            <ion-icon name=\"person-outline\"></ion-icon>\n          </label>\n          <input\n            id=\"username\"\n            type=\"text\"\n            name=\"username\"\n            className=\"form-control\"\n            placeholder=\"Enter your username\"\n            value={form.username}\n            onChange={handleChange}\n          />\n        </div>\n\n        <div className=\"form-group form-inline\">\n          <label>\n            <ion-icon name=\"lock-closed-outline\"></ion-icon>\n          </label>\n          <input\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            className=\"form-control\"\n            placeholder=\"Enter your password\"\n            value={form.password}\n            onChange={handleChange}\n          />\n        </div>\n        <button\n          className=\"btn btn-primary btn-block\"\n          type=\"submit\"\n          style={{ backgroundColor: \"darkslategray\" }}\n        >\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Signup;\n",["57","58"],"/Users/toonbosmans/development/GA-projects/project4/journal_client/src/components/NaviLoggedIn.js",[],"/Users/toonbosmans/development/GA-projects/project4/journal_client/src/AppB.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":34,"column":6,"nodeType":"65","endLine":34,"endColumn":20,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"67","line":61,"column":39,"nodeType":"65","endLine":61,"endColumn":53,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":12},{"ruleId":"69","severity":1,"message":"73","line":7,"column":11,"nodeType":"71","messageId":"72","endLine":7,"endColumn":17},{"ruleId":"69","severity":1,"message":"74","line":7,"column":19,"nodeType":"71","messageId":"72","endLine":7,"endColumn":28},{"ruleId":"69","severity":1,"message":"74","line":6,"column":19,"nodeType":"71","messageId":"72","endLine":6,"endColumn":28},{"ruleId":"59","replacedBy":"75"},{"ruleId":"61","replacedBy":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'gState'. Either include it or remove the dependency array. You can also do a functional update 'setgState(g => ...)' if you only need 'gState' in the 'setgState' call.","ArrayExpression",["79"],"React Hook React.useEffect has a missing dependency: 'getEntries'. Either include it or remove the dependency array.",["80"],"no-unused-vars","'AppB' is defined but never used.","Identifier","unusedVar","'gState' is assigned a value but never used.","'setgState' is assigned a value but never used.",["77"],["78"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [gState, gState.token]",{"range":"85","text":"86"},"Update the dependencies array to be: [gState.token, getEntries]",{"range":"87","text":"88"},[1065,1079],"[gState, gState.token]",[1799,1813],"[gState.token, getEntries]"]